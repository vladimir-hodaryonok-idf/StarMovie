def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')

def keys = new Properties()
def keysFile = rootProject.file('keys.properties')

if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

if (keysFile.exists()){
    keysFile.withReader('UTF-8') { reader ->
        keys.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
def facebookAppId = keys.getProperty("facebook_app_id")
def fbLoginProtocolScheme = keys.getProperty("fb_login_protocol_scheme")
def facebookClientToken = keys.getProperty("facebook_client_token")

if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.vladimir.hodaryonok.star_movie"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    flavorDimensions "app"

    productFlavors {

        SandBox {
            dimension "app"
            resValue("string", "facebook_app_id", facebookAppId)
            resValue("string", "fb_login_protocol_scheme", fbLoginProtocolScheme)
            resValue("string", "facebook_client_token", facebookClientToken)
        }

        Prod {
            dimension "app"
            resValue("string", "facebook_app_id", facebookAppId)
            resValue("string", "fb_login_protocol_scheme", fbLoginProtocolScheme)
            resValue("string", "facebook_client_token", facebookClientToken)
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.facebook.android:facebook-login:latest.release'
}